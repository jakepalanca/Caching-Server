name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up SSH using a dedicated action
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PEM_FILE }}

      # 3. Execute Deployment Commands
      - name: Execute Deployment Commands
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.PEM_FILE }}
          script: |
            set -e

            # Stop existing Java application
            echo "Stopping existing application instance..."
            PID_FILE=/home/ec2-user/Caching-Server/app.pid
            if [ -f "$PID_FILE" ]; then
              PID=$(cat $PID_FILE)
              if ps -p $PID > /dev/null; then
                echo "Stopping Java process with PID: $PID"
                kill -15 $PID
                sleep 5
                if ps -p $PID > /dev/null; then
                  echo "Force killing Java process..."
                  kill -9 $PID
                fi
                echo "Java process stopped successfully."
              else
                echo "Java process is not running."
              fi
              rm -f $PID_FILE
            else
              echo "No PID file found. Skipping stop command."
            fi

            # Deploy updated code
            echo "Deploying the latest code..."
            cd /home/ec2-user/Caching-Server
            git fetch origin master
            LOCAL=$(git rev-parse HEAD)
            REMOTE=$(git rev-parse origin/master)
            if [ "$LOCAL" != "$REMOTE" ]; then
              git pull origin master
            else
              echo "Already up to date."
            fi

            # Build the project
            echo "Building the project..."
            mvn clean install

            # Start new application instance
            echo "Starting new application instance..."
            COINGECKO_REQUEST_DELAY_MS=15000
            COINGECKO_NUMBER_OF_BATCHES=4
            FETCH_COIN_INTERVAL_SECONDS=60
            UPDATE_DYNAMODB_INTERVAL_SECONDS=30
            DYNAMODB_WRITE_CAPACITY_UNITS=50

            nohup java -Dfile.encoding=UTF-8 \
              -Ddemo.mode="${{ secrets.DEMO_MODE }}" \
              -Dcoingecko.api.key="${{ secrets.COINGECKO_API_KEY }}" \
              -Dcoingecko.request.delay.ms=${COINGECKO_REQUEST_DELAY_MS} \
              -Dcoingecko.number.of.batches=${COINGECKO_NUMBER_OF_BATCHES} \
              -Dfetch.coin.interval.seconds=${FETCH_COIN_INTERVAL_SECONDS} \
              -Dupdate.dynamodb.interval.seconds=${UPDATE_DYNAMODB_INTERVAL_SECONDS} \
              -Ddynamodb.write.capacity.units=${DYNAMODB_WRITE_CAPACITY_UNITS} \
              -jar target/*.jar > app.log 2>&1 &

            echo $! > app.pid
            echo "New application instance started successfully."

            # Explicitly exit to prevent hanging
            exit 0
