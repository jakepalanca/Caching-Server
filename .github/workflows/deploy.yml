name: Deploy to EC2 on Master Push

on:
  push:
    branches:
      - master  # Change to 'main' if your default branch is 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up SSH key and known hosts
      - name: Set up SSH key and known hosts
        run: |
          echo "Setting up SSH keys..."
          mkdir -p ~/.ssh
          echo "${{ secrets.PEM_FILE }}" | tr -d '\r' > ~/.ssh/Github-Action-1.pem
          chmod 600 ~/.ssh/Github-Action-1.pem
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/Github-Action-1.pem
          ssh-keyscan -H ec2-50-17-144-60.compute-1.amazonaws.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "SSH keys set up completed."

      # 3. Configure git user explicitly (in case git commands are failing due to identity issues)
      - name: Set up Git User
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      # Optional: Test SSH Connection
      - name: Test SSH Connection
        run: |
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-50-17-144-60.compute-1.amazonaws.com "echo SSH Connection Successful"
          echo "SSH connection test completed."

      # 4. Deploy to EC2 (split into smaller steps for debugging)
      - name: Navigate to Caching-Server directory on EC2
        run: |
          echo "Navigating to project directory on EC2..."
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-50-17-144-60.compute-1.amazonaws.com "
            set -e
            cd /home/ec2-user/Caching-Server || { echo 'Directory not found'; exit 1; }
            echo 'Navigated to project directory.'
          "

      - name: Pull the latest code on EC2
        run: |
          echo "Pulling the latest code..."
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-50-17-144-60.compute-1.amazonaws.com "
            set -e
            cd /home/ec2-user/Caching-Server
            git fetch origin master
            LOCAL=\$(git rev-parse HEAD)
            REMOTE=\$(git rev-parse origin/master)

            if [ \"\$LOCAL\" = \"\$REMOTE\" ]; then
              echo 'Already up to date.'
            else
              git pull origin master
            fi
            echo 'Git pull completed.'
          "

      - name: Build the project on EC2
        run: |
          echo "Building the project..."
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-50-17-144-60.compute-1.amazonaws.com "
            set -e
            cd /home/ec2-user/Caching-Server
            mvn clean install
            echo 'Build completed.'
          "

      - name: Stop the existing application instance on EC2
        run: |
          echo "Stopping existing application instance..."
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-50-17-144-60.compute-1.amazonaws.com "
            set -e
            pkill -f 'java -jar' || echo 'No existing application process found.'
            sleep 5
            echo 'Application instance stopped.'
          "

      - name: Start the new application instance on EC2
        run: |
          echo "Starting new application instance..."
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-50-17-144-60.compute-1.amazonaws.com "
            set -e
            cd /home/ec2-user/Caching-Server
            nohup java -Dfile.encoding=UTF-8 -jar target/*.jar > app.log 2>&1 &
            echo 'New application instance started.'
          "
