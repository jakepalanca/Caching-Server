name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.INSTANCE_SSH }}

      - name: Deploy Application via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ec2-18-212-152-50.compute-1.amazonaws.com
          username: ec2-user
          key: ${{ secrets.INSTANCE_SSH }}
          port: 22
          script: |
            #!/bin/bash

            set -e

            # Ensure Git is installed
            if ! command -v git &> /dev/null; then
                echo "Git is not installed. Installing Git..."
                sudo yum install git -y
            fi

            # Ensure Maven is installed
            if ! command -v mvn &> /dev/null; then
                echo "Maven is not installed. Installing Maven..."
                sudo yum install maven -y
            fi

            # Navigate to the home directory
            cd /home/ec2-user

            # Clone the repository or pull the latest changes
            if [ -d "Caching-Server" ]; then
              cd Caching-Server
              echo "Pulling the latest changes from master..."
              git pull origin master
            else
              echo "Cloning the repository..."
              git clone https://github.com/jakepalanca/Caching-Server.git
              cd Caching-Server
            fi

            # Clean previous build artifacts and stale test classes
            echo "Cleaning project..."
            mvn clean
            rm -rf target/

            # Build the project with tests
            echo "Building the project with Maven..."
            mvn install -DskipTests=false

            # If using Systemd (optional)
            echo "Reloading Systemd, enabling and starting the application..."
            sudo systemctl daemon-reload
            sudo systemctl enable caching-server.service
            sudo systemctl restart caching-server.service

            # Check the status of the service
            sudo systemctl status caching-server.service
